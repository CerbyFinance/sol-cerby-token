{
	"compiler": {
		"version": "0.8.13+commit.abaa5c0e"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "AccountIsMissingRole",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CanOnlyRenounceRoleForSelf",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "CerbyCronJobsExecution_TransactionsAreTemporarilyDisabled",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "transactionHash",
						"type": "bytes32"
					}
				],
				"name": "ApprovedTransaction",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32[]",
						"name": "transactionHashes",
						"type": "bytes32[]"
					}
				],
				"name": "BulkApprovedTransactions",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newFeePercent",
						"type": "uint256"
					}
				],
				"name": "FeeUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountAsFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentNonce",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sourceChain",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "destinationChain",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "transactionHash",
						"type": "bytes32"
					}
				],
				"name": "ProofOfBurn",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "addr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountAsFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "finalAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "transactionHash",
						"type": "bytes32"
					}
				],
				"name": "ProofOfMint",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ROLE_ADMIN",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "ROLE_APPROVER",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "beneficiaryAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32[]",
						"name": "transactionHashes",
						"type": "bytes32[]"
					}
				],
				"name": "bulkMarkTransactionsAsApproved",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "token",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "chainId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountAsFee",
								"type": "uint256"
							}
						],
						"internalType": "struct BulkFeeDependingOnDestinationChainId[]",
						"name": "bulkFees",
						"type": "tuple[]"
					}
				],
				"name": "bulkUpdateFeeDependingOnDestinationChainId",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "destinationChainId",
						"type": "uint256"
					}
				],
				"name": "burnAndCreateProof",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "currentNonce",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "tokenAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "destinationChainId",
						"type": "uint256"
					}
				],
				"name": "getFeeDependingOnDestinationChainId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getRoleMember",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleMemberCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_pos",
						"type": "uint256"
					}
				],
				"name": "getUtilsContractAtPos",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "role",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "addr",
								"type": "address"
							}
						],
						"internalType": "struct RoleAccess[]",
						"name": "roles",
						"type": "tuple[]"
					}
				],
				"name": "grantRolesBulk",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "transactionHash",
						"type": "bytes32"
					}
				],
				"name": "markTransactionAsApproved",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "amountToBridge",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amountAsFee",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceChainId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "sourceNonce",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "sourceTokenAddr",
								"type": "address"
							},
							{
								"internalType": "bytes32",
								"name": "transactionHash",
								"type": "bytes32"
							}
						],
						"internalType": "struct CrossChainBridge.SourceProofOfBurn",
						"name": "sourceProofOfBurn",
						"type": "tuple"
					}
				],
				"name": "mintWithBurnProof",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "transactionStorage",
				"outputs": [
					{
						"internalType": "enum CrossChainBridge.States",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newBeneficiaryAddr",
						"type": "address"
					}
				],
				"name": "updateBeneficiaryAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"getRoleMember(bytes32,uint256)": {
					"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
				},
				"getRoleMemberCount(bytes32)": {
					"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-defifactory-token/CrossChainBridge.sol": "CrossChainBridge"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-cerby-swap-v1/contracts/CerbyCronJobsExecution.sol": {
			"keccak256": "0xbe5b226f30beb42adac900e264d35b96252c0221b1489f5b18e7621feb82f9ac",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://30e02520d6f9b41e5d1d9de05034d9b721075b2da02b342845a058ccab1c441a",
				"dweb:/ipfs/QmSU2RJoRsWfNVKfMQvNfyEgPpi8RZLsjajiqRV6RNNr18"
			]
		},
		"sol-cerby-swap-v1/contracts/interfaces/ICerbyBotDetection.sol": {
			"keccak256": "0xbc95b2664c6eba1c562504b57a6a8c384104b29d516d7a50adc88bc7690f7838",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://5766813310ea6a93f250416a9047fbfbfaff52e2fcd136c9b8ad74c3b195553b",
				"dweb:/ipfs/QmSEutKMBmwTsmJjTa3M6MrtXhi4VbLTzizrRmPuuvcx4e"
			]
		},
		"sol-cerby-swap-v1/contracts/interfaces/ICerbyToken.sol": {
			"keccak256": "0xd773b000eb1082d4a19994a9de798f5e45f56b3e07360a1d35734e75b92f1b5f",
			"license": "MIT",
			"urls": [
				"bzz-raw://9dc20c13496ab3fecdcc17eeef774fb5fe818a65f15ef96affc310278b8a5445",
				"dweb:/ipfs/QmbZqGDLrknz2ZYNLjGvVztYMGpAhspiPawhqve6A1D4yy"
			]
		},
		"sol-cerby-swap-v1/contracts/interfaces/ICerbyTokenMinterBurner.sol": {
			"keccak256": "0x3c087a201fb202262d7020befa7b14f5c1ce3a68eade22f026c9dd15b48cd03a",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://c98f4a9b37c6d6bc937015e77203c950a1b417e7920d9eee9c10694c2eff1fd1",
				"dweb:/ipfs/QmWUHMxo7ejUSwiw49hUR2csi4FhEThsMXjxPUzFPjC9Ts"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/AccessControl.sol": {
			"keccak256": "0x625f544696a4c39ea49999e0a17846a97f67f1c86f9baec4e408e4d7088a0081",
			"license": "MIT",
			"urls": [
				"bzz-raw://cf5daee5cf45dcd95d749efaab6154f725e9e4c6da6cd4ef294e0e919eaf82af",
				"dweb:/ipfs/QmW3M3YzDBTcbYVpEmWKWssyd37QsWD9S4zrsWaq5bRN4E"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/AccessControlEnumerable.sol": {
			"keccak256": "0x400e79893c3e86fe147ce1e6916987d8f90351136496bb9fa7d0c33ecf194378",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f3c9ea28f53c46abce10f71c3a61720a435ff0667414d48b4a94d590c8fca8e",
				"dweb:/ipfs/QmTcBSf9QJh4Q5QbLewHquxcZ8kcWe1pBCVZvxuMaqP28F"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/IAccessControl.sol": {
			"keccak256": "0x39cf384e5d33ace3043a89089ab368b4c3a93e8b209c928b194f02dc037213b4",
			"license": "MIT",
			"urls": [
				"bzz-raw://2e843a398bf56fa1bc11580bc539f6452ec3c317a161d7bc70d6a1205763e8f9",
				"dweb:/ipfs/QmToa4vPGpg6S5n29MGEbACXS42euGLWcvBixo7txkrcdD"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/access/IAccessControlEnumerable.sol": {
			"keccak256": "0xaac4e60985b08b34f95df096f9f7818586ae2157f426e6aa30abeceee47a7090",
			"license": "MIT",
			"urls": [
				"bzz-raw://2649ee0862526030b38cd15c65a8d0d61614d6d3f526de8b1b48ccbdf8672cd4",
				"dweb:/ipfs/QmPwCik5omsKx4zkwyS8hYT9NwQMvpZ84cS8XawRNXspuJ"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/Strings.sol": {
			"keccak256": "0x301f818a468d58adca752b80f0c0332628a61227e726bb1b04020805868e3806",
			"license": "MIT",
			"urls": [
				"bzz-raw://d4053cc4d0a627c22c85f1f26b8332220d1f08d2978efa5e4e069b7e706639ba",
				"dweb:/ipfs/QmQSu9Z5SmAE1gSibNJSmyHDbQQwFtbdF3Pn9JkCKLGw4n"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/ERC165.sol": {
			"keccak256": "0x80cff4f25810ab85caa3f5839b7cb5b7683a9540da82268e2b9f422e0d4d58e6",
			"license": "MIT",
			"urls": [
				"bzz-raw://1858a5438e273c2f48db04bfa9e49e5a5bbf5ccb36b1c666756647aacfca2a04",
				"dweb:/ipfs/QmR1bYQhYWtRLLXMyRJYtZRaEmXkbFGWHcd6a59VKrFgMR"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"sol-cerby-swap-v1/openzeppelin/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x8acb4b6655fa152ff8fc79cd0682c2862d56512547bcaa591c5bcc2657e6b86a",
			"license": "MIT",
			"urls": [
				"bzz-raw://39a93fe24137aa2e913b16f2bec6746d59696dc9cf2b62065366357b68d5689d",
				"dweb:/ipfs/Qmb9pgaSpvASizwM5CaRqtA1x1RRd74PQCahvXTuZZMx2V"
			]
		},
		"sol-defifactory-token/CrossChainBridge.sol": {
			"keccak256": "0xc9301ce9addeb0314838ece0824220242d77cfca38c682cb3c3136ce0ca6aa6e",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://0de4a7d007cd893793ac05e953f72a6ab5ed4d8807b6ece64daaacc4980941f8",
				"dweb:/ipfs/QmS9UV9jXkakesLJSnFMyw1jn9Whuwi2yW2PkkDU2BNPRL"
			]
		}
	},
	"version": 1
}