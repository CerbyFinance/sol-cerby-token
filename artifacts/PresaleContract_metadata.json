{
	"compiler": {
		"version": "0.8.8+commit.dddeac2f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "tokenomicsAddr",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "tokenomicsName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsLockedForXSeconds",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsVestedForXSeconds",
								"type": "uint256"
							}
						],
						"internalType": "struct Tokenomics[]",
						"name": "_tokenomics",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "tokenAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "presaleName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "website",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "telegram",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "uniswapLiquidityLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "presaleLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "presaleVestedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "referralsLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "referralsVestedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxWethCap",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "perWalletMinWeth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "perWalletMaxWeth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fixedPriceInDeft",
								"type": "uint256"
							}
						],
						"internalType": "struct Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "enum PresaleContract.States",
						"name": "newState",
						"type": "uint8"
					}
				],
				"name": "StateChanged",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "addLiquidityOnUniswapV2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "amountOfTokensForInvestors",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkIfAllVestingWasSet",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkIfPairIsCreated",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "checkIfTokenomicsIsValid",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "claimVesting",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "emergencyRefund",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "getAvailableVestingTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "wallet",
						"type": "address"
					}
				],
				"name": "getInformation",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "address",
										"name": "presaleContractAddress",
										"type": "address"
									},
									{
										"internalType": "string",
										"name": "presaleName",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "totalInvestedWeth",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "maxWethCap",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isActive",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "isEnabled",
										"type": "bool"
									},
									{
										"internalType": "string",
										"name": "website",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "telegram",
										"type": "string"
									}
								],
								"internalType": "struct PresaleItem",
								"name": "presaleItem",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "walletAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "walletInvestedWeth",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "walletReferralEarnings",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "minimumWethPerWallet",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "maximumWethPerWallet",
										"type": "uint256"
									}
								],
								"internalType": "struct WalletInfo",
								"name": "walletInfo",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "vestingAddr",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "tokensReserved",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "tokensClaimed",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "lockedUntilTimestamp",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "vestedUntilTimestamp",
										"type": "uint256"
									}
								],
								"internalType": "struct Vesting",
								"name": "vestingInfo",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "tokenomicsAddr",
										"type": "address"
									},
									{
										"internalType": "string",
										"name": "tokenomicsName",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "tokenomicsPercentage",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "tokenomicsLockedForXSeconds",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "tokenomicsVestedForXSeconds",
										"type": "uint256"
									}
								],
								"internalType": "struct Tokenomics[]",
								"name": "tokenomics",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "listingPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							}
						],
						"internalType": "struct OutputItem",
						"name": "output",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTokenomics",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "tokenomicsAddr",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "tokenomicsName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsLockedForXSeconds",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsVestedForXSeconds",
								"type": "uint256"
							}
						],
						"internalType": "struct Tokenomics[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "referralAddr",
						"type": "address"
					}
				],
				"name": "invest",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "listInvestors",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "investorAddr",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "referralAddr",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "wethValue",
								"type": "uint256"
							}
						],
						"internalType": "struct PresaleContract.Investor[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "listReferrals",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "referralAddr",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "earnings",
								"type": "uint256"
							}
						],
						"internalType": "struct PresaleContract.Referral[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "markGoalAsReached",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "prepareAddLiqudity",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "setVestingForInvestorsTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "offset",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "setVestingForReferralsTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "setVestingForTokenomicsTokens",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "settings",
				"outputs": [
					{
						"internalType": "address",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "presaleName",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "website",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "telegram",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "uniswapLiquidityLockedFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "presaleLockedFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "presaleVestedFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralsLockedFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "referralsVestedFor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxWethCap",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "perWalletMinWeth",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "perWalletMaxWeth",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "fixedPriceInDeft",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "skipSteps1",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "skipSteps2",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum PresaleContract.States",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "totalTokenSupply",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "tokenAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "presaleName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "website",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "telegram",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "uniswapLiquidityLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "presaleLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "presaleVestedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "referralsLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "referralsVestedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxWethCap",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "perWalletMinWeth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "perWalletMaxWeth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fixedPriceInDeft",
								"type": "uint256"
							}
						],
						"internalType": "struct Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"name": "updateSettings",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "vesting",
				"outputs": [
					{
						"internalType": "address",
						"name": "vestingAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "tokensReserved",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "tokensClaimed",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lockedUntilTimestamp",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "vestedUntilTimestamp",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"stateMutability": "payable",
				"type": "receive"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-defifactory-token/PresaleContract.sol": "PresaleContract"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-defifactory-token/PresaleContract.sol": {
			"keccak256": "0x54eb722e2a1beb786ad00e76872f9a686902f063aa2e814ad9ebe1aac841a0a3",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://8bbc010be224616dd0826fe575d8cb8212c960fcf76091d332bc095fb8cebd51",
				"dweb:/ipfs/QmPcukdU8GNKwiv3SJFGXPvb7NHpXgVSmUtjumPNA15pDe"
			]
		},
		"sol-defifactory-token/interfaces/IDefiFactoryToken.sol": {
			"keccak256": "0x66d5ab7fd3243597df6ed32828230154327dffcbf9f4dd3a30a998728ad45d76",
			"license": "MIT",
			"urls": [
				"bzz-raw://25ea6cc145dd2b7c22d8f1496e4e60fb67313f641bff21eb97d8db17062649d1",
				"dweb:/ipfs/QmUBx9qi5tmFcHe3HpaTSSfW3xxoNy7y751G7NSGqg2SrB"
			]
		},
		"sol-defifactory-token/interfaces/ITeamFinance.sol": {
			"keccak256": "0x6a63b8ce921e4a3ece16c6c8dd3bcd17536e4079d02b0f68891810f035bf9a24",
			"license": "MIT",
			"urls": [
				"bzz-raw://0213eb180a0c35b27ece742707f49edfa9376fa1dab3b38d256473e495e891da",
				"dweb:/ipfs/QmVzw8vwaBTbzRA5mvYEPL58uijq13CbfgnDTY6eWqhcUj"
			]
		},
		"sol-defifactory-token/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0xcedf8f2d94a11375f62ab9e3c0cbca9e584de936dc974d84c0785935c08555fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://355af2d26712d9ec44a3fc629162d8c0c3b40126b7916a1fc3f4e39ba42224f6",
				"dweb:/ipfs/QmTataj3Mb5b6E6n5NU7GLtPC5N8ugJwUKJ5fR8LqT69m1"
			]
		},
		"sol-defifactory-token/interfaces/IUniswapV2Router.sol": {
			"keccak256": "0x590b9262136f0a0af7a7ba0c2f823624e8b5a70461b91822c404ce9fb0ab69dd",
			"license": "MIT",
			"urls": [
				"bzz-raw://27cdcc84b36b3ded02e4db7bd50c4e3ca417c57b0937b6a01a730aa405e4ed72",
				"dweb:/ipfs/QmQSu4eRtu1YKaS5bVRNizUZn2RHnhqBqXbjM4pgoauN7U"
			]
		},
		"sol-defifactory-token/interfaces/IWeth.sol": {
			"keccak256": "0xf30f17c3689153f7d2c741581083ca990c735b3cd447552365ecae9a30c8784c",
			"license": "MIT",
			"urls": [
				"bzz-raw://afcb5877551cbb613c10b7e13a67997bddc532e33119c9809e13aa06bed65ad1",
				"dweb:/ipfs/Qmciw1wkEtLM5eod62NY8mbCitPYyQ9ySYeh6c87Rsk5qz"
			]
		},
		"sol-defifactory-token/openzeppelin/access/Ownable.sol": {
			"keccak256": "0x7ddc617166e84747271d1de4240204563d09e5976baeb51c95cc4ea17c927c3f",
			"license": "MIT",
			"urls": [
				"bzz-raw://690b70b10ad38fd0d7368551f39c283dae73cf0f2b1ea70c0bf4ba88905ee364",
				"dweb:/ipfs/QmW3LYvfDEWQmBggysr24iafoCRVgqwGkN21oVkLsLYX6M"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		}
	},
	"version": 1
}