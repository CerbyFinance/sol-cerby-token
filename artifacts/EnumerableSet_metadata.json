{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [],
		"devdoc": {
			"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-defifactory-token/Flat_ShitCoin.sol": "EnumerableSet"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 1000
		},
		"remappings": []
	},
	"sources": {
		"sol-defifactory-token/Flat_ShitCoin.sol": {
			"keccak256": "0x4d6a054fef287f52331491430fa30b75ffa9da164875ff1a1499be1fc69db3b5",
			"license": "MIT",
			"urls": [
				"bzz-raw://96a34cf7a839e51531494a7fb2ab12577748a5fad0fb90f0d0bcb8af8462933c",
				"dweb:/ipfs/QmbyW54pJxr36Fm9iL8qwW1YzFQBZBhUSM93ytFxLPwJpj"
			]
		}
	},
	"version": 1
}