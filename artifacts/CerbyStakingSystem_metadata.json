{
	"compiler": {
		"version": "0.8.11+commit.d7f03943"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "fromAddr",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amountToBurn",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentDay",
						"type": "uint256"
					}
				],
				"name": "BurnedAndAddedToStakersInflation",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sealedDay",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sealedCachedDay",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "cachedInterestPerShare",
						"type": "uint256"
					}
				],
				"name": "CachedInterestPerShareSealed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sealedDay",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "inflationAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalShares",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sharePrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalStaked",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "totalSupply",
						"type": "uint256"
					}
				],
				"name": "DailySnapshotSealed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newSharePrice",
						"type": "uint256"
					}
				],
				"name": "NewMaxSharePriceReached",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "previousAdminRole",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "newAdminRole",
						"type": "bytes32"
					}
				],
				"name": "RoleAdminChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					}
				],
				"name": "RoleRevoked",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "MINIMUM_DAYS_FOR_HIGH_PENALTY",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "CONTROLLED_APY",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "SMALLER_PAYS_BETTER_BONUS",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "LONGER_PAYS_BETTER_BONUS",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "END_STAKE_FROM",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "END_STAKE_TO",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "MINIMUM_STAKE_DAYS",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "MAXIMUM_STAKE_DAYS",
								"type": "uint256"
							}
						],
						"indexed": false,
						"internalType": "struct Settings",
						"name": "Settings",
						"type": "tuple"
					}
				],
				"name": "SettingsUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endDay",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "interest",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "penalty",
						"type": "uint256"
					}
				],
				"name": "StakeEnded",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "StakeOwnerChanged",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stakedAmount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startDay",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockedForXDays",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sharesCount",
						"type": "uint256"
					}
				],
				"name": "StakeStarted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lockedForXDays",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "sharesCount",
						"type": "uint256"
					}
				],
				"name": "StakeUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "ROLE_ADMIN",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "stakeIds",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "stakeOwner",
						"type": "address"
					}
				],
				"name": "adminBulkDestroyStakes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "stakeIds",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "oldOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "adminBulkTransferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromAddr",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountToBurn",
						"type": "uint256"
					}
				],
				"name": "adminBurnAndAddToStakersInflation",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromStakingContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "fromIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "toIndex",
						"type": "uint256"
					}
				],
				"name": "adminMigrateInitialInterestPerShare",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromStakingContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "fromIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "toIndex",
						"type": "uint256"
					}
				],
				"name": "adminMigrateInitialSnapshots",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "fromStakingContract",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "fromIndex",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "toIndex",
						"type": "uint256"
					}
				],
				"name": "adminMigrateInitialStakes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "MINIMUM_DAYS_FOR_HIGH_PENALTY",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "CONTROLLED_APY",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "SMALLER_PAYS_BETTER_BONUS",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "LONGER_PAYS_BETTER_BONUS",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "END_STAKE_FROM",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "END_STAKE_TO",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "MINIMUM_STAKE_DAYS",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "MAXIMUM_STAKE_DAYS",
								"type": "uint256"
							}
						],
						"internalType": "struct Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"name": "adminUpdateSettings",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "stakeIds",
						"type": "uint256[]"
					}
				],
				"name": "bulkEndStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "stakeIds",
						"type": "uint256[]"
					}
				],
				"name": "bulkScrapeStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "stakedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockedForXDays",
								"type": "uint256"
							}
						],
						"internalType": "struct StartStake[]",
						"name": "startStakes",
						"type": "tuple[]"
					}
				],
				"name": "bulkStartStake",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "stakeIds",
						"type": "uint256[]"
					},
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "bulkTransferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "cachedInterestPerShare",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "dailySnapshots",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "inflationAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "totalShares",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "sharePrice",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCachedInterestPerShareLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentCachedPerShareDay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCurrentDaySinceLaunch",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getDailySnapshotsLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					}
				],
				"name": "getInterestById",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "stakedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startDay",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockedForXDays",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endDay",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxSharesCountOnStartStake",
								"type": "uint256"
							}
						],
						"internalType": "struct Stake",
						"name": "stake",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					}
				],
				"name": "getInterestByStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interest",
						"type": "uint256"
					}
				],
				"name": "getPenaltyById",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "stakedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startDay",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockedForXDays",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endDay",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxSharesCountOnStartStake",
								"type": "uint256"
							}
						],
						"internalType": "struct Stake",
						"name": "stake",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "interest",
						"type": "uint256"
					}
				],
				"name": "getPenaltyByStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleAdmin",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "index",
						"type": "uint256"
					}
				],
				"name": "getRoleMember",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					}
				],
				"name": "getRoleMemberCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "stakeId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					}
				],
				"name": "getSharesCountById",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "stakedAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "startDay",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lockedForXDays",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "endDay",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxSharesCountOnStartStake",
								"type": "uint256"
							}
						],
						"internalType": "struct Stake",
						"name": "stake",
						"type": "tuple"
					},
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					}
				],
				"name": "getSharesCountByStake",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getStakesLength",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getTotalTokensStaked",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "pos",
						"type": "uint256"
					}
				],
				"name": "getUtilsContractAtPos",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "grantRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "role",
								"type": "bytes32"
							},
							{
								"internalType": "address",
								"name": "addr",
								"type": "address"
							}
						],
						"internalType": "struct RoleAccess[]",
						"name": "roles",
						"type": "tuple[]"
					}
				],
				"name": "grantRolesBulk",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "hasRole",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "launchTimestamp",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "renounceRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "role",
						"type": "bytes32"
					},
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "revokeRole",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "settings",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "MINIMUM_DAYS_FOR_HIGH_PENALTY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "CONTROLLED_APY",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "SMALLER_PAYS_BETTER_BONUS",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "LONGER_PAYS_BETTER_BONUS",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "END_STAKE_FROM",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "END_STAKE_TO",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "MINIMUM_STAKE_DAYS",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "MAXIMUM_STAKE_DAYS",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "stakes",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "stakedAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lockedForXDays",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endDay",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maxSharesCountOnStartStake",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "updateAllSnapshots",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "givenDay",
						"type": "uint256"
					}
				],
				"name": "updateSnapshots",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"getRoleAdmin(bytes32)": {
					"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
				},
				"getRoleMember(bytes32,uint256)": {
					"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
				},
				"getRoleMemberCount(bytes32)": {
					"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
				},
				"grantRole(bytes32,address)": {
					"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"hasRole(bytes32,address)": {
					"details": "Returns `true` if `account` has been granted `role`."
				},
				"renounceRole(bytes32,address)": {
					"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
				},
				"revokeRole(bytes32,address)": {
					"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
				},
				"supportsInterface(bytes4)": {
					"details": "See {IERC165-supportsInterface}."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-defifactory-token/CerbyStakingSystem.sol": "CerbyStakingSystem"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-defifactory-token/CerbyCronJobsExecution.sol": {
			"keccak256": "0x360916f1553ed040c46f18ac8c99fbd49353c01c05a24787db0e8f88b1d14b67",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://3dac2b2fd6c9b657f69300316fe2882faf15b17e634a29997668fae09a56c23f",
				"dweb:/ipfs/QmVyBRbPPBExvsoJbE37vYezmL5KHz2TU4itqG5AfWniK3"
			]
		},
		"sol-defifactory-token/CerbyStakingSystem.sol": {
			"keccak256": "0xcb3d51ff376d5130d44a1a63ae22548a3596b832be716f0201bd8bfcccb6f986",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://faefb0845606f07e0d21e590c457c479d3b55da2dfd4c2d948e7117a9a4e1b6e",
				"dweb:/ipfs/QmTckhBrDq2h4YsGgCy4UMGZ1cn1gSEfyrokagmYFLNxeb"
			]
		},
		"sol-defifactory-token/interfaces/ICerbyBotDetection.sol": {
			"keccak256": "0x9b905563f93d66ea6f18aaea9c07d545092817e11bae89ae0c8cd59f4f50e505",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://51de5e7294d47d594ed80f368b8cffa09d67af65d9f3f3699f3e5b7bb96f33ce",
				"dweb:/ipfs/QmRKwyPpezfDG6s4Y1BimYvvjzZ3amPxhEMACjMv2U3fFw"
			]
		},
		"sol-defifactory-token/interfaces/ICerbyStakingSystem.sol": {
			"keccak256": "0xc5c6044cdf597c1e7aa9f14e0404854eed60082165cdbc2656881c209cfedccf",
			"license": "BUSL-1.1",
			"urls": [
				"bzz-raw://5ffa56ca7418b6c6228aa3eecfa40229507618c8752272c81fd56c7fb819fd29",
				"dweb:/ipfs/QmZE3kg1gpbyKgUcnUwKX5xXToraJmCuqjkPdPhk9wLGhv"
			]
		},
		"sol-defifactory-token/interfaces/ICerbyToken.sol": {
			"keccak256": "0x1cf233391c970f48f8e1a2db9a3e81c4ebb8c2ff423c6d1c553df632f04abf2d",
			"license": "MIT",
			"urls": [
				"bzz-raw://845a3faee636b03fa2b2e09a4d43df33ce2f1ac5f031c9f4d9f7a5f2a1d5ee7e",
				"dweb:/ipfs/QmV6PFf9HzucpBj4y6zvW7BbuMRGhQAEa7MRWKCCREgB7V"
			]
		},
		"sol-defifactory-token/openzeppelin/access/AccessControl.sol": {
			"keccak256": "0x1ec8150ef4a64df2151cc2dbb3742cb677949af9d0b1fa19a7e73aa240377a96",
			"license": "MIT",
			"urls": [
				"bzz-raw://4a4110866e1b5c34e381466dc1f42fd238ed754fb7ef77ff690a462ed3757db3",
				"dweb:/ipfs/QmYL7t1Re9pJ3BvB81su6vK8wFTvrri6fVj3vCMgbMUrYd"
			]
		},
		"sol-defifactory-token/openzeppelin/access/AccessControlEnumerable.sol": {
			"keccak256": "0x1304796e9cdc64294735b4222849a240363b2aff374bb58b7c728f8dc0f4aa75",
			"license": "MIT",
			"urls": [
				"bzz-raw://c87398b4ba8f7c7e6613a5967e5407a5af6807e753d326d5e3b8c29697d33e36",
				"dweb:/ipfs/QmWGzaF9UWB5rNW1h9kvkJaWSf95WkQZ7RVR3bJ24oVgwG"
			]
		},
		"sol-defifactory-token/openzeppelin/access/IAccessControl.sol": {
			"keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
				"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
			]
		},
		"sol-defifactory-token/openzeppelin/access/IAccessControlEnumerable.sol": {
			"keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
			"license": "MIT",
			"urls": [
				"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
				"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/Strings.sol": {
			"keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
			"license": "MIT",
			"urls": [
				"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
				"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/structs/EnumerableSet.sol": {
			"keccak256": "0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900",
			"license": "MIT",
			"urls": [
				"bzz-raw://ad2f29a9c17a4f746416c9e254e17671f43c409dbfa6e4d7d76c3e4a83212d31",
				"dweb:/ipfs/QmTqU65L6iu6yqmXKzcNLPioR8etzKPWycpDJCm17ifVdS"
			]
		}
	},
	"version": 1
}