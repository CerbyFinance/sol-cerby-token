{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "tokenomicsAddr",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "tokenomicsName",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsPercentage",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsLockedForXSeconds",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "tokenomicsVestedForXSeconds",
								"type": "uint256"
							}
						],
						"internalType": "struct Tokenomics[]",
						"name": "_tokenomics",
						"type": "tuple[]"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "tokenAddress",
								"type": "address"
							},
							{
								"internalType": "string",
								"name": "presaleName",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "website",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "telegram",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "uniswapLiquidityLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "presaleLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "presaleVestedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "referralsLockedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "referralsVestedFor",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "maxWethCap",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "perWalletMinWeth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "perWalletMaxWeth",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "fixedPriceInDeft",
								"type": "uint256"
							}
						],
						"internalType": "struct Settings",
						"name": "_settings",
						"type": "tuple"
					}
				],
				"name": "createPresale",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "walletAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "page",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "listPresales",
				"outputs": [
					{
						"components": [
							{
								"components": [
									{
										"internalType": "address",
										"name": "presaleContractAddress",
										"type": "address"
									},
									{
										"internalType": "string",
										"name": "presaleName",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "totalInvestedWeth",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "maxWethCap",
										"type": "uint256"
									},
									{
										"internalType": "bool",
										"name": "isActive",
										"type": "bool"
									},
									{
										"internalType": "bool",
										"name": "isEnabled",
										"type": "bool"
									},
									{
										"internalType": "string",
										"name": "website",
										"type": "string"
									},
									{
										"internalType": "string",
										"name": "telegram",
										"type": "string"
									}
								],
								"internalType": "struct PresaleItem",
								"name": "presaleItem",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "walletAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "walletInvestedWeth",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "walletReferralEarnings",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "minimumWethPerWallet",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "maximumWethPerWallet",
										"type": "uint256"
									}
								],
								"internalType": "struct WalletInfo",
								"name": "walletInfo",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "vestingAddr",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "tokensReserved",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "tokensClaimed",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "lockedUntilTimestamp",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "vestedUntilTimestamp",
										"type": "uint256"
									}
								],
								"internalType": "struct Vesting",
								"name": "vestingInfo",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "tokenomicsAddr",
										"type": "address"
									},
									{
										"internalType": "string",
										"name": "tokenomicsName",
										"type": "string"
									},
									{
										"internalType": "uint256",
										"name": "tokenomicsPercentage",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "tokenomicsLockedForXSeconds",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "tokenomicsVestedForXSeconds",
										"type": "uint256"
									}
								],
								"internalType": "struct Tokenomics[]",
								"name": "tokenomics",
								"type": "tuple[]"
							},
							{
								"internalType": "uint256",
								"name": "listingPrice",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "createdAt",
								"type": "uint256"
							}
						],
						"internalType": "struct OutputItem[]",
						"name": "output",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "presaleContracts",
				"outputs": [
					{
						"internalType": "contract PresaleContract",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"sol-defifactory-token/PresaleFactory.sol": "PresaleFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"sol-defifactory-token/PresaleContract.sol": {
			"keccak256": "0x5043b9882efe4f6179cfd0d06453ae78bf3e71647546065950e8a2bbe38aea0f",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://142cac216f29935be182df8520ff4f36cbe55fc3636e1826e6167ce8012d6be5",
				"dweb:/ipfs/Qmec2vdS65CSSm5xmZFEi6i2BKFLXPJGN6FcfQBJLqQkDY"
			]
		},
		"sol-defifactory-token/PresaleFactory.sol": {
			"keccak256": "0x76e29481bdde1351d871c135a02a1434cebc5f549518d21fad07ae0ddafb300c",
			"license": "BSD-2-Clause",
			"urls": [
				"bzz-raw://69a340fb7453227a30eb34d3a868f515ef90e41dca0e719a9c9a71f43aa12935",
				"dweb:/ipfs/QmTD8bg4VpiUvqZBMQ5bpXXHGxKk77BctHhgqx11VtPSLW"
			]
		},
		"sol-defifactory-token/interfaces/IDefiFactoryToken.sol": {
			"keccak256": "0x66d5ab7fd3243597df6ed32828230154327dffcbf9f4dd3a30a998728ad45d76",
			"license": "MIT",
			"urls": [
				"bzz-raw://25ea6cc145dd2b7c22d8f1496e4e60fb67313f641bff21eb97d8db17062649d1",
				"dweb:/ipfs/QmUBx9qi5tmFcHe3HpaTSSfW3xxoNy7y751G7NSGqg2SrB"
			]
		},
		"sol-defifactory-token/interfaces/ITeamFinance.sol": {
			"keccak256": "0x6a63b8ce921e4a3ece16c6c8dd3bcd17536e4079d02b0f68891810f035bf9a24",
			"license": "MIT",
			"urls": [
				"bzz-raw://0213eb180a0c35b27ece742707f49edfa9376fa1dab3b38d256473e495e891da",
				"dweb:/ipfs/QmVzw8vwaBTbzRA5mvYEPL58uijq13CbfgnDTY6eWqhcUj"
			]
		},
		"sol-defifactory-token/interfaces/IUniswapV2Factory.sol": {
			"keccak256": "0xcedf8f2d94a11375f62ab9e3c0cbca9e584de936dc974d84c0785935c08555fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://355af2d26712d9ec44a3fc629162d8c0c3b40126b7916a1fc3f4e39ba42224f6",
				"dweb:/ipfs/QmTataj3Mb5b6E6n5NU7GLtPC5N8ugJwUKJ5fR8LqT69m1"
			]
		},
		"sol-defifactory-token/interfaces/IUniswapV2Pair.sol": {
			"keccak256": "0x8b11d0b070b3ea821880b21c336186d619892cd92cb90f05a9defebef8836624",
			"license": "MIT",
			"urls": [
				"bzz-raw://f0598d56bb3b6a0ee15374a10ce2913e854af87f5c6845772ef505a31c0c9fa7",
				"dweb:/ipfs/QmXH92UmaKz7qks5cXQbDae5gwnDWnAHvwmcS8vvgraA5Y"
			]
		},
		"sol-defifactory-token/interfaces/IWeth.sol": {
			"keccak256": "0xf30f17c3689153f7d2c741581083ca990c735b3cd447552365ecae9a30c8784c",
			"license": "MIT",
			"urls": [
				"bzz-raw://afcb5877551cbb613c10b7e13a67997bddc532e33119c9809e13aa06bed65ad1",
				"dweb:/ipfs/Qmciw1wkEtLM5eod62NY8mbCitPYyQ9ySYeh6c87Rsk5qz"
			]
		},
		"sol-defifactory-token/openzeppelin/access/Ownable.sol": {
			"keccak256": "0x7ddc617166e84747271d1de4240204563d09e5976baeb51c95cc4ea17c927c3f",
			"license": "MIT",
			"urls": [
				"bzz-raw://690b70b10ad38fd0d7368551f39c283dae73cf0f2b1ea70c0bf4ba88905ee364",
				"dweb:/ipfs/QmW3LYvfDEWQmBggysr24iafoCRVgqwGkN21oVkLsLYX6M"
			]
		},
		"sol-defifactory-token/openzeppelin/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		}
	},
	"version": 1
}